name: Custom Runners Release

on:
  push:
    branches:
      - main

jobs:

  Release:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.author.name, 'robot-lt')"

    steps:

      - name: Check patch label
        id: check_pr_labels_patch
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["release:patch"]'

      - name: Check minor label
        id: check_pr_labels_minor
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["release:minor"]'

      - name: Check major label
        id: check_pr_labels_major
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["release:major"]'

      - name: Release Type
        run: |
          if [ ${PATCH} == "true" ] ; then
            echo "RELEASE_TYPE=patch" >> $GITHUB_ENV
          elif [ ${MAJOR} == "true" ] ; then
            echo "RELEASE_TYPE=major" >> $GITHUB_ENV
          elif [ ${MINOR} == "true" ] ; then
            echo "RELEASE_TYPE=minor" >> $GITHUB_ENV
          else
          echo "RELEASE_TYPE=none" >> $GITHUB_ENV
          fi
        env:
          PATCH: ${{ steps.check_pr_labels_patch.outputs.result }}
          MINOR: ${{ steps.check_pr_labels_minor.outputs.result }}
          MAJOR: ${{ steps.check_pr_labels_major.outputs.result }}

      - name: Testing Release Type
        if: env.RELEASE_TYPE == 'none'
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('Release labels were not present in the PR!')

      - name: Set Env
        run: |
          echo "BOTNAME=Custom Runners bot ${GITHUB_REF_SLUG}" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.GH_API_TOKEN }}

      - name: Setup Github
        run: |
          git config --global user.name "robot-lt"
          git config --global user.email "robot-lt@lambdatest.com"

      - name: Build and Release
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Yarn Install and Publish
        run: yarn install && yarn lint  && lerna publish ${{ env.RELEASE_TYPE }} --force-publish --no-verify-access -y
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build Cloud Runners
        run: |
          gh workflow run -R ${{ secrets.WF_REPO }} ${{ secrets.WF_NAME }} -r main
        env:
          GITHUB_TOKEN: ${{secrets.GH_API_TOKEN}}

      - name: 'Send alert to slack'
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: ${{ env.BOTNAME }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
